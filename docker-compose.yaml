version: "3"
services:
  database:
    image: mysql:5.7
    stop_grace_period: 30s
    environment:
      MYSQL_ROOT_PASSWORD: test
      MYSQL_DATABASE: test
      MYSQL_USER: test
      MYSQL_PASSWORD: test
    volumes:
      - db:/var/lib/mysql
    networks:
      - default
      - nginx-proxy

  composer:
    user: ${USER_ID}
    build: docker/php-fpm
    working_dir: /app
    environment:
      COMPOSER_HOME: /tmp
    volumes:
      - ~/.cache/composer/:/tmp:rw
      - ./:/app

  php-fpm:
    user: ${USER_ID}
    build: docker/php-fpm
    environment:
      DB_HOST: test
      DB_USER: test
      DB_PASSWORD: test
      DB_NAME: test
      DB_DRIVER: mysql
    volumes:
      - ./:/var/www/html
    networks:
      - default
      - nginx-proxy

  nginx:
    image: nginx:latest
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:rw
    depends_on:
      - php-fpm
    environment:
      VIRTUAL_HOST: sy.localhost, www.sy.localhost
    networks:
      - default
      - nginx-proxy

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.0.1
    environment:
      - cluster.name=demo
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - 9200:9200

  kibana:
    image: docker.elastic.co/kibana/kibana:6.0.1
    ports:
      - 5601:5601

  reverseproxy:
    image: jwilder/nginx-proxy:latest
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock
      - ./reverseproxy/config/conf.d:/etc/nginx/conf.d
      - ./reverseproxy/config/vhost.d:/etc/nginx/vhost.d
      - ./reverseproxy/config/certs:/etc/nginx/certs
      - ./reverseproxy/config/htpasswd:/etc/nginx/htpasswd
      - ./reverseproxy/log/nginx:/var/log/nginx
    ports:
      - 80:80
      - 443:443
    networks:
      - default
      - nginx-proxy

networks:
  nginx-proxy:
    external:
      name: proxy-nginx

volumes:
  db:
